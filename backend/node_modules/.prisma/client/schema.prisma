// This is your Prisma schema file
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  role      Role      @default(USER)
  aadhaar   Aadhaar[]
  bookings  Booking[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Aadhaar {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  aadhaarNumber String // Will be stored encrypted
  isVerified    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("aadhaar")
}

model Hotel {
  id          String   @id @default(uuid())
  name        String
  description String
  address     String
  city        String
  state       String
  pincode     String
  imageUrl    String?
  pricePerDay Decimal  @db.Decimal(10, 2)
  amenities   String[] // Array of amenities
  rating      Decimal? @db.Decimal(3, 2)
  rooms       Room[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hotels")
}

model Room {
  id          String    @id @default(uuid())
  hotel       Hotel     @relation(fields: [hotelId], references: [id])
  hotelId     String
  roomNumber  String
  roomType    RoomType
  capacity    Int
  pricePerDay Decimal   @db.Decimal(10, 2)
  isAvailable Boolean   @default(true)
  bookings    Booking[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("rooms")
}

enum RoomType {
  STANDARD
  DELUXE
  SUITE
  EXECUTIVE
}

model Booking {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  room          Room          @relation(fields: [roomId], references: [id])
  roomId        String
  checkInDate   DateTime
  checkOutDate  DateTime
  totalPrice    Decimal       @db.Decimal(10, 2)
  bookingStatus BookingStatus @default(CONFIRMED)
  isCheckedIn   Boolean       @default(false)
  aadhaarUsed   String? // Reference to the Aadhaar number used for check-in (encrypted)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@map("bookings")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELED
  COMPLETED
}
